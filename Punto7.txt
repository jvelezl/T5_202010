Para cada algoritmo explicar cuando se presenta su peor caso y su mejor caso. Para cada caso, dar la complejidad te—rica en tiempo usando la notaci—n O( ... ).  ShellSort Peor Caso: Si el arreglo est‡ ordenada de manera descendiente, y no tiene duplicados, la ordenaci—n por inserci—n hace ~1/2  N^2 comparaciones y ~1/2  N^2 intercambios. O(N(logN )^2)Mejor caso: Si el arreglo se encuentra en orden ascendente, entonces la organizaci—n por inserci—n realiza N-1 comparaciones, y ningœn intercambio. ( O(n)). MergeSortMejor Caso: El nœmero de comparaciones es  ~ N lgN. O(N(logN)Peor Caso: El nœmero de comparaciones es  ~ N lgN. O(N(logN) QuickSortMejor caso: El nœmero de comparaciones es ~ N lgN. O(N(logN)Peor caso: El nœmero de comparaciones es ~1/2  N^2. O(N^2)Indicar para cada algoritmo si cumple las siguientes propiedades: algoritmo InPlace, algoritmo Adaptativo y algoritmo Estable.  ShellSortInPlace: Si      Estable: No QuickSortInPlace: SiEstable: No MergeSortInPlace: NoEstable: Si